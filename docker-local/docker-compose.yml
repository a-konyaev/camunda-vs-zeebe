version: '3'

networks:
  camunda-vs-zeebe:

services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
    networks:
      - camunda-vs-zeebe

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - "9093:9093"
    networks:
      - camunda-vs-zeebe
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_CREATE_TOPICS: >
        company-scoring-response:1:1,
        scoring-response:1:1

  storage:
    container_name: storage
    build:
      context: ./../storage
    image: storage:latest
    ports:
      - "8091:8080"
    networks:
      - camunda-vs-zeebe

  scoring:
    container_name: scoring
    build:
      context: ./../scoring
    image: scoring:latest
    ports:
      - "8092:8080"
    networks:
      - camunda-vs-zeebe
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092

  camunda-db:
    container_name: camunda-db
    image: postgres:12.7
    ports:
      - "5432:5432"
    networks:
      - camunda-vs-zeebe
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo

  camunda-app:
    container_name: camunda-app
    build:
      context: ./../camunda-app
    image: camunda-app:latest
    ports:
      - 8080:8080
    networks:
      - camunda-vs-zeebe
    depends_on:
      - storage
      - scoring
      - camunda-db
      - kafka
    environment:
      CAMUNDA_DATASOURCE_JDBC_URL: jdbc:postgresql://camunda-db:5432/demo
      SERVICES_STORAGE: http://storage:8080/
      SERVICES_SCORING: http://scoring:8080/
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
