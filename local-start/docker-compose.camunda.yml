version: '3'

networks:
  camunda-vs-zeebe:

services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:${ZOOKEEPER_VERSION}
    ports:
      - "2181:2181"
    networks:
      - camunda-vs-zeebe

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:${KAFKA_VERSION}
    ports:
      - "9093:9093"
    networks:
      - camunda-vs-zeebe
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_CREATE_TOPICS: >
        company-scoring-response:1:1,
        scoring-response:1:1

  external-service:
    container_name: external-service
    build:
      context: ./../external-service
    image: external-service:latest
    ports:
      - "8090:8080"
    networks:
      - camunda-vs-zeebe
    depends_on:
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092

  camunda-db:
    container_name: camunda-db
    image: postgres:${POSTGRES_VERSION}
    command: postgres -c 'max_connections=500'
    ports:
      - "5432:5432"
    networks:
      - camunda-vs-zeebe
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demo

#  pgadmin:
#    container_name: pgadmin
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: 11111
#    ports:
#      - "5050:80"
#    networks:
#      - camunda-vs-zeebe
# TODO: see https://stackoverflow.com/questions/42248198/how-to-mount-a-single-file-in-a-volume
#    volumes:
#      - ./pgadmin4/servers.json:/pgadmin4/servers.json:bind
#      - ./pgadmin4/pgpass:/pgadmin4/pgpass:bind

  camunda-app:
    container_name: camunda-app
    build:
      context: ./../camunda-app
    image: camunda-app:latest
    ports:
      - 8080:8080
    networks:
      - camunda-vs-zeebe
    depends_on:
      - external-service
      - camunda-db
      - kafka
    environment:
      CAMUNDA_DATASOURCE_JDBC_URL: jdbc:postgresql://camunda-db:5432/demo
      SERVICES_STORAGE: http://external-service:8080/
      SERVICES_SCORING: http://external-service:8080/
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:9092
